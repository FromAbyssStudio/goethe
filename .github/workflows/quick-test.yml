name: Quick Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  quick-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc-12, clang-15]
        build-type: [Debug, Release]
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential libyaml-cpp-dev libgtest-dev libgmock-dev libssl-dev libzstd-dev pkg-config
    
    - name: Set up compiler
      run: |
        if [[ "${{ matrix.compiler }}" == gcc-* ]]; then
          sudo apt-get install -y ${{ matrix.compiler }}
          echo "CC=gcc" >> $GITHUB_ENV
          echo "CXX=g++" >> $GITHUB_ENV
        else
          sudo apt-get install -y ${{ matrix.compiler }}
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
        fi
    
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
              -DCMAKE_C_COMPILER=$CC \
              -DCMAKE_CXX_COMPILER=$CXX \
              -DCMAKE_CXX_FLAGS="-Wall -Wextra" \
              ..
    
    - name: Build
      run: |
        cd build
        make -j$(nproc)
    
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure --verbose --timeout 120
    
    - name: Run key test executables
      if: matrix.build-type == 'Debug'
      run: |
        cd build
        # Run the main test executables
        for test_exe in simple_statistics_test statistics_test; do
          if [ -f "$test_exe" ] && [ -x "$test_exe" ]; then
            echo "Running $test_exe..."
            ./$test_exe
          fi
        done
